From f9c640fa1d4c14dfbd2bc40af91cb446ad373075 Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Tue, 2 Jul 2019 20:51:08 +0000
Subject: [PATCH] Add additional cgroup mounts from root NS automatically

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 src/systemdhook.c | 45 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/src/systemdhook.c b/src/systemdhook.c
index 87a3585..5220c54 100644
--- a/src/systemdhook.c
+++ b/src/systemdhook.c
@@ -281,6 +281,11 @@ static char *get_process_cgroup_subsystem_path(const char *id, int pid, const ch
 static int mount_cgroup(const char *id, const char *rootfs, const char *options, char *systemd_path)
 {
 	_cleanup_free_ char *cgroup_path = NULL;
+	char *spath, *dpath;
+	DIR *dir;
+	struct dirent *d;
+	char link[80];
+	int got;
 
 	if (asprintf(&cgroup_path, "%s/%s", rootfs, CGROUP_ROOT) < 0) {
 		pr_perror("%s: Failed to create path for %s", id, CGROUP_ROOT);
@@ -290,6 +295,46 @@ static int mount_cgroup(const char *id, const char *rootfs, const char *options,
 		pr_perror("%s: Failed to mkdir new dest: %s", id, cgroup_path);
 		return -1;
 	}
+	/* Create all additional cgroup mounts which are in the root namespace */
+	dir = opendir(CGROUP_ROOT);
+	if (!dir) {
+		pr_perror("Failed to open %s", CGROUP_ROOT);
+		return -1;
+	}
+	/* Skip "." and ".." */
+	readdir(dir);
+	readdir(dir);
+	while ((d = readdir(dir))) {
+		/* Systemd is already handled above */
+		if (strcmp(d->d_name, "systemd") == 0) {
+			continue;
+		}
+		if (asprintf(&spath, "%s/%s", CGROUP_ROOT, d->d_name) < 0) {
+			pr_perror("Failed to create path for %s", d->d_name);
+			return -1;
+		}
+		if (asprintf(&dpath, "%s%s/%s", rootfs, CGROUP_ROOT, d->d_name) < 0) {
+			pr_perror("Failed to create path for %s", d->d_name);
+			return -1;
+		}
+		got = readlink(spath, link, sizeof(link) - 1);
+		if (got > 0) {
+			link[got] = '\0';
+			symlink(link, dpath);
+		} else {
+			if ((makepath(dpath, 0755) == -1) && (errno != EEXIST)) {
+				pr_perror("Failed to mkdir new dest: %s", dpath);
+				return -1;
+			}
+			if (bind_mount(id, spath, dpath, false)) {
+				pr_perror("Failed to bind mount %s on %s", spath, dpath);
+				return -1;
+			}
+		}
+		free(spath);
+		free(dpath);
+	}
+	closedir(dir);
 	/* Mount tmpfs at new cgroup directory */
 	if (mount("tmpfs", cgroup_path, "tmpfs", MS_NODEV|MS_NOSUID, options) == -1) {
 		pr_perror("%s: Failed to mount tmpfs at %s", id, cgroup_path);
-- 
2.19.1

